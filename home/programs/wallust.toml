# wallust 2.9.0-d.*
# -- global space -- #
# values below can be overwritten by command line flags


# https://explosion-mental.codeberg.page/wallust/parameters/

# backend = "full"
backend = "fastresize"
# backend = "kmeans"

# lchmixed
# lchansi
# color_space = "lchansi"
# color_space = "lch"
color_space = "lchmixed"

# threshold = 19

# palette = "ansidark16"
# palette = "harddark16"
palette = "dark16"
check_contrast = true

# This field chooses a method to use when the gathered colors aren't enough:
#  * interpolation - (default) Tries to pick two colors and built gradients over them
#  * complementary - Uses the complementary colors of two colors, or more (if needed), colors.
#generation = "interpolate"

# Ensures a "readable contrast" (OPTIONAL, disabled by default)
# Should only be enabled when you notice an unreadable contrast frequently happening
# with your images. The reference color for the contrast is the background color.
#check_contrast = true

# Color saturation, between [1% and 100%] (OPTIONAL, disabled by default)
# usually something higher than 50 increases the saturation and below
# decreases it (on a scheme with strong and vivid colors)
#saturation = 35

# Alpha value for templating, by default 100 (no other use whatsoever)
#alpha = 100

[templates]
# template: A relative path that points to a file where wallust.toml is located, usually at `~/.config/wallust/`
# target: Absolute path in which to place a file with generated templated values
# NOTE: prefer '' over "" for paths, avoids escaping.
#zathura = { template = 'zathura', target = '~/.config/zathura/zathurarc' }

# OPTIONALLY It can accept `new_engine = true`: This "new engine" difers by using  double brackets like `{{variable}}`
# instead of one like usual, which helps with file formats that use brackets like json. With the `new_engine` enabled
# you can escape and produce a literal `{{` by `{{{{}}`, and for `}}` you escape it with `{{}}}}`.
#dunst = { template = 'dunstconfig', target = '~/.config/dunst/dunstrc', new_engine = true }

# template field can be express as `src` and target as `dst` for shorter naming:
#alacritty = { src = 'alacrittycfg', dst = '~/.config/alacritty/alacritty.toml' }
# As well as using dotted toml fields, both `alacritty` fields represent the same;
#alacritty.src = 'alacrittycfg'
#alacritty.dst = '~/.config/alacritty/alacritty.toml'

# REMINDER Variables and methods that can be used with templating:
#  wallpaper:  The full path to the current wallpaper, colorscheme file or the name of the theme in use.
#  backend:    Current **backend** being used.
#  colorspace: Current **colorspace** being used.
#  palette:     Current **palette** being used.
#  alpha:      Default to 100, can be modified in the config file or with `--alpha`/`-a`.
#  alpha_dec:  Instead of [0..=100], displays it from 0.00 to 1.00.
#  var:        Output the color in `hex`.
#  var.rgb:    Output the color in `rgb`.
#  var.rgba:   Output the color in `rgba`.
#  var.xrgba:  Output the color in `xrgb`.
#  var.strip:  Output the color in `hex` (without a `#`).
#  var.red:    Output the red value.
#  var.green:  Output the green value.
#  var.blue:   Output the blue value.
#
# Where `var` can be colors from `color0` to `color15`, `background`, `foreground` and `cursor`.
